- strong outline on "real world applications" (RWAs). in RWAs the graphs already exist and are constantly updated. for the dynamic algorithms to work they need to rebuild the graph from scratch or somehow differently be supplied with a maximal matching which is to maintain. i'd like to compare the overall runtime of rebuilding a graph from scratch and constantly updating the matching using the implemented algorithms with an approach where I calculate the maximal matching once using the best static algorithm and then letting the dynamic algorithms maintain this matching maximal.

- creating new versions of dynamic algorithms, that consist of combinations of different algorithms could be easily performed by creating a new class of algirthms, that extends the dynamic_matching class and contains an array of dynamic_matching algorithms. by doing so it implements the needed functions to use it as a normal matching algorithm.
